{"version":3,"file":"static/js/503.0f72b590.chunk.js","mappings":"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","sources":["components/ContainerPage.styled.js","components/CastList/CastList.styled.js","components/CastList/CastList.jsx","pages/Cast.jsx","services/ApiMovies.js"],"sourcesContent":["import styled from \"styled-components\"\n\n\nconst ContainerPage =styled('div')(() => {\n  return {\n    borderTop: 'solid 1px rgba(2,0,36,1)',\n    textAlign: 'center',\n    background: 'rgba(103,103,212,0.8)',\n    h1:{\n      color:'rgba(2,0,36,1)',\n    }\n  }\n})\n\nexport default ContainerPage","import styled from \"styled-components\"\n\n\nconst CastListStyled= styled('ul') (() => {\n  return {\n  marginTop: '30px',\n  display: 'flex',\n  alignItems: 'center',\n  gap: '50px',\n  flexWrap: 'wrap',\n  listStyle: 'none',\n  padding: '40px',\n  li:{\n    width: 'calc((100% - 5 * 50px) / 6)',\n    height: '400px',\n    wordWrap: 'break-word',\n    backgroundColor: '#f8f8f8',\n    borderRadius: '5px',\n    boxShadow: '0 0 5px rgba(0, 0, 0, 0.2)',\n    maxWidth: '500px',\n      h2:{\n        marginBottom: '10px',\n        p:{\n          margin: '30px auto 0 auto',\n          textAlign: 'center',\n          padding: '20px',\n        },\n\n      }\n    }\n  }\n  }\n)\n\nexport default CastListStyled","import CastListStyled from \"./CastList.styled\"\n\n\nconst CastList = ({cast}) => {\n  return (\n    <div>\n        <CastListStyled>\n           {cast.map(({profile_path, id, name, character}) => \n           ( <li key={id}>\n\n                {profile_path ? (\n                  <img\n                  src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                  alt={`${name} profile`}/>\n                ) : (\n                    <img\n                    src={`https://via.placeholder.com/200x300?text=No+Image`}\n                    alt={`${name} profile`}\n                  />\n                )}\n                \n                    <h2>{name}</h2>\n                    <p>Character:{character}</p>\n                \n\n\n            </li>))}\n        </CastListStyled>\n    </div>\n  )\n}\n\nexport default CastList","import CastList from \"components/CastList/CastList\";\nimport ContainerPage from \"components/ContainerPage.styled\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { fetchMovieCast } from \"services/ApiMovies\";\n\n\nconst Cast = () => {\n  const {movieId} = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const {cast} = await fetchMovieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <ContainerPage>\n      <h1>Cast</h1>\n\n      {cast.length ? <CastList cast={cast}/> :\n      <p>We don't have any information about the cast yet.</p>}\n    </ContainerPage>\n  )\n}\n\nexport default Cast","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '09a8cd7e0a760fa659d2c7c5b140aba5';\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = async () => {\n  const {data} = await axios.get( `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`);\n   return data;\n};\n\nexport const fetchMoviesQuery = async query => {\n  const {data} = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n}\n\nexport const fetchMovieId = async movieId => {\n  const {data} = await axios.get(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};"],"names":["ContainerPage","styled","borderTop","textAlign","background","h1","color","marginTop","display","alignItems","gap","flexWrap","listStyle","padding","li","width","height","wordWrap","backgroundColor","borderRadius","boxShadow","maxWidth","h2","marginBottom","p","margin","_ref","cast","_jsx","children","CastListStyled","map","_ref2","profile_path","id","name","character","_jsxs","src","concat","alt","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setCast","useEffect","getCast","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchMovieCast","_cast","_context","prev","next","fetchMovieCast","sent","t0","console","log","stop","apply","arguments","length","CastList","axios","API_KEY","fetchTrendingMovies","_yield$axios$get","data","abrupt","fetchMoviesQuery","_callee2","query","_yield$axios$get2","_context2","_x","fetchMovieId","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}